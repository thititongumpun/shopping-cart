{"version":3,"sources":["Item/Item.styles.ts","Item/Item.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","description","price","Button","onClick","getProducts","a","fetch","json","App","useQuery","data","isLoading","error","console","log","clickedItem","LinearProgress","Grid","container","spacing","map","xs","sm","id","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"+NAEaA,EAAUC,IAAOC,IAAV,+b,OCoBLC,EAZe,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,gBAAT,OAC5B,eAACL,EAAD,WACE,qBAAKM,IAAKF,EAAKG,MAAOC,IAAKJ,EAAKK,QAChC,gCACE,6BAAKL,EAAKK,QACV,4BAAIL,EAAKM,cACT,mCAAMN,EAAKO,YAEb,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMR,EAAgBD,IAAvC,6B,gBChBSJ,EAAUC,IAAOC,IAAV,0BCqBdY,EAAW,uCAAG,sBAAAC,EAAA,sEACGC,MAAM,qCADT,8BACgDC,OADhD,mFAAH,qDAiCFC,EA7BH,WAAO,IAAD,EACmBC,YACjC,WACAL,GAFMM,EADQ,EACRA,KAAMC,EADE,EACFA,UAAWC,EADT,EACSA,MAIzBC,QAAQC,IAAIJ,GAEZ,IAEMf,EAAkB,SAACoB,GAAD,OAA+B,MAIvD,OAAIJ,EAAkB,cAACK,EAAA,EAAD,IAClBJ,EAAc,yDAGhB,cAAC,EAAD,UACE,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,gBACGT,QADH,IACGA,OADH,EACGA,EAAMU,KAAI,SAAC1B,GAAD,OACT,cAACuB,EAAA,EAAD,CAAMvB,MAAI,EAAe2B,GAAI,GAAIC,GAAI,EAArC,SACE,cAAC,EAAD,CAAM5B,KAAMA,EAAMC,gBAAiBA,KADrBD,EAAK6B,Y,gBC1CzBC,EAAS,IAAIC,IAEnBC,IAASC,OACP,cAACC,EAAA,EAAD,CAAqBJ,OAAQA,EAA7B,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.a04d6a08.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  width: 100%;\n  border: 1px solid lightblue;\n  border-radius: 20px;\n  height: 100%;\n  button {\n    border-radius: 0 0 20px 20px;\n  }\n  img {\n    max-height: 250px;\n    object-fit: cover;\n    border-radius: 20px 20px 0 0;\n  }\n  div {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 1rem;\n    height: 100%;\n  }\n`;\n","import Button from '@material-ui/core/Button';\n\nimport { CartItemType } from '../App';\n\nimport { Wrapper } from './Item.styles';\ninterface Props {\n  item: CartItemType;\n  handleAddToCart: (clickedItem: CartItemType) => void;\n}\n\nconst Item: React.FC<Props> = ({ item, handleAddToCart }) => (\n  <Wrapper>\n    <img src={item.image} alt={item.title} />\n    <div>\n      <h3>{item.title}</h3>\n      <p>{item.description}</p>\n      <h3>${item.price}</h3>\n    </div>\n    <Button onClick={() => handleAddToCart(item)}>Add to cart</Button>\n  </Wrapper>\n);\n\nexport default Item;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div``","import { useState } from 'react';\nimport { useQuery } from 'react-query';\n\nimport Item from './Item/Item';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n\nimport { Wrapper } from './App.styles';\n\nexport interface CartItemType {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: string;\n  title: string;\n  amount: string;\n}\n\nconst getProducts = async (): Promise<CartItemType[]> => {\n  return await (await (fetch('https://fakestoreapi.com/products'))).json();\n} \n\nconst App = () => {\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products',\n    getProducts\n  );\n  console.log(data);\n  \n  const getTotalItems = () => null;\n\n  const handleAddToCart = (clickedItem: CartItemType) => null;\n\n  const handleRemoveFromCart = () => null;\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>somethin went wrong...</div>\n\n  return (\n    <Wrapper>\n      <Grid container spacing={3}>\n        {data?.map((item) => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <App />\n  </QueryClientProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}