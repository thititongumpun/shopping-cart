{"version":3,"sources":["Item/Item.styles.ts","Item/Item.tsx","CartItem/CartItem.styles.ts","CartItem/CartItem.tsx","Cart/Cart.styles.ts","Cart/Cart.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","description","price","Button","onClick","CartItem","addToCart","removeFromCart","className","amount","toFixed","size","disableElevation","variant","id","aside","Cart","cartItems","length","map","StyledButton","IconButton","getProducts","a","fetch","json","App","useState","cartOpen","setCartOpen","useQuery","data","isLoading","error","console","log","items","clickedItem","LinearProgress","Drawer","anchor","open","onClose","Badge","badgeContent","reduce","acc","color","Grid","container","spacing","xs","sm","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"iPAEaA,EAAUC,IAAOC,IAAV,+b,OCoBLC,EAZe,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,gBAAT,OAC5B,eAACL,EAAD,WACE,qBAAKM,IAAKF,EAAKG,MAAOC,IAAKJ,EAAKK,QAChC,gCACE,6BAAKL,EAAKK,QACV,4BAAIL,EAAKM,cACT,mCAAMN,EAAKO,YAEb,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMR,EAAgBD,IAAvC,6BChBSJ,EAAUC,IAAOC,IAAV,8GC2CLY,EAhCmB,SAAC,GAAD,IAAEV,EAAF,EAAEA,KAAMW,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,eAAnB,OAChC,cAAC,EAAD,UACE,gCACE,6BAAKZ,EAAKK,QACV,sBAAKQ,UAAU,cAAf,UACE,yCAAYb,EAAKO,SACjB,0CAAaP,EAAKc,OAASd,EAAKO,OAAOQ,QAAQ,SAEjD,sBAAKF,UAAU,UAAf,UACE,cAACL,EAAA,EAAD,CACEQ,KAAK,QACLC,kBAAgB,EAChBC,QAAQ,YACRT,QAAS,kBAAMG,EAAeZ,EAAKmB,KAJrC,eAQA,4BAAInB,EAAKc,SACT,cAACN,EAAA,EAAD,CACEQ,KAAK,QACLC,kBAAgB,EAChBC,QAAQ,YACRT,QAAS,kBAAME,EAAUX,IAJ3B,kBASF,qBAAKE,IAAKF,EAAKG,MAAOC,IAAKJ,EAAKK,cCtCzBT,EAAUC,IAAOuB,MAAV,6GC4BLC,EAlBe,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,UAAWX,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,eAErD,OACE,eAAC,EAAD,WACE,+CACsB,IAArBU,EAAUC,OAAe,kDAA2B,KACpDD,EAAUE,KAAI,SAAAxB,GAAI,OACjB,cAAC,EAAD,CAEEA,KAAMA,EACNW,UAAWA,EACXC,eAAgBA,GAHXZ,EAAKmB,W,8DCjBPvB,EAAUC,IAAOC,IAAV,6CAIP2B,EAAe5B,YAAO6B,IAAP7B,CAAH,+FCkBnB8B,EAAW,uCAAG,sBAAAC,EAAA,sEACGC,MAAM,qCADT,8BACgDC,OADhD,mFAAH,qDAgDFC,EA5CH,WAAO,IAAD,EACgBC,oBAAS,GADzB,mBACTC,EADS,KACCC,EADD,OAEkBF,mBAAS,IAF3B,mBAETV,EAFS,aAGmBa,YACjC,WACAR,IAFMS,EAHQ,EAGRA,KAAMC,EAHE,EAGFA,UAAWC,EAHT,EAGSA,MAIzBC,QAAQC,IAAIJ,GAEZ,IAAuBK,EAGjBxC,EAAkB,SAACyC,GAAD,OAA+B,MAIvD,OAAIL,EAAkB,cAACM,EAAA,EAAD,IAClBL,EAAc,yDAGhB,eAAC,EAAD,WACE,cAACM,EAAA,EAAD,CAAQC,OAAO,QAAQC,KAAMb,EAAUc,QAAS,kBAAMb,GAAY,IAAlE,SACI,cAAC,EAAD,CACEZ,UAAWA,EACXX,UAAWV,EACXW,eAXmB,kBAAM,UAc/B,cAACa,EAAD,CAAchB,QAAS,kBAAMyB,GAAY,IAAzC,SACE,cAACc,EAAA,EAAD,CAAOC,cApBUR,EAoBkBnB,EAnBvCmB,EAAMS,QAAO,SAACC,EAAanD,GAAd,OAAuBmD,EAAMnD,EAAKc,SAAQ,IAmBJsC,MAAM,QAArD,SACE,cAAC,IAAD,QAGN,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,gBACKnB,QADL,IACKA,OADL,EACKA,EAAMZ,KAAI,SAACxB,GAAD,OACT,cAACqD,EAAA,EAAD,CAAMrD,MAAI,EAAewD,GAAI,GAAIC,GAAI,EAArC,SACE,cAAC,EAAD,CAAMzD,KAAMA,EAAMC,gBAAiBA,KADrBD,EAAKmB,a,iBC3DzBuC,EAAS,IAAIC,IAEnBC,IAASC,OACP,cAACC,EAAA,EAAD,CAAqBJ,OAAQA,EAA7B,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.b74f91a2.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  width: 100%;\n  border: 1px solid lightblue;\n  border-radius: 20px;\n  height: 100%;\n  button {\n    border-radius: 0 0 20px 20px;\n  }\n  img {\n    max-height: 250px;\n    object-fit: cover;\n    border-radius: 20px 20px 0 0;\n  }\n  div {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 1rem;\n    height: 100%;\n  }\n`;\n","import Button from '@material-ui/core/Button';\n\nimport { CartItemType } from '../App';\n\nimport { Wrapper } from './Item.styles';\ninterface Props {\n  item: CartItemType;\n  handleAddToCart: (clickedItem: CartItemType) => void;\n}\n\nconst Item: React.FC<Props> = ({ item, handleAddToCart }) => (\n  <Wrapper>\n    <img src={item.image} alt={item.title} />\n    <div>\n      <h3>{item.title}</h3>\n      <p>{item.description}</p>\n      <h3>${item.price}</h3>\n    </div>\n    <Button onClick={() => handleAddToCart(item)}>Add to cart</Button>\n  </Wrapper>\n);\n\nexport default Item;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  font-family: Arial, Helvetica, sans-serif;\n  width: 500px;\n  padding: 20px;\ni`","import Button from '@material-ui/core/Button';\n\nimport { CartItemType } from '../App';\n\nimport { Wrapper } from './CartItem.styles';\n\ninterface Props {\n  item: CartItemType;\n  addToCart: (clicked: CartItemType) => void;\n  removeFromCart: (id: number) => void;\n};\n\n\nconst CartItem: React.FC<Props> = ({item, addToCart, removeFromCart}) => (\n  <Wrapper>\n    <div>\n      <h3>{item.title}</h3>\n      <div className=\"information\">\n        <p>Price: ${item.price}</p>\n        <p>Total: ${(item.amount * item.price).toFixed(2)}</p>\n      </div>\n      <div className=\"buttons\">\n        <Button\n          size=\"small\"\n          disableElevation\n          variant=\"contained\"\n          onClick={() => removeFromCart(item.id)}\n        >\n          -\n        </Button>\n        <p>{item.amount}</p>\n        <Button\n          size=\"small\"\n          disableElevation\n          variant=\"contained\"\n          onClick={() => addToCart(item)}\n        >\n          +\n        </Button>\n      </div>\n      <img src={item.image} alt={item.title} />\n    </div>\n  </Wrapper>\n);\n\nexport default CartItem;","import styled from 'styled-components';\n\nexport const Wrapper = styled.aside`\n  font-family: Arial, Helvetica, sans-serif;\n  width: 500px;\n  padding: 20px;\n`","import CartItem from '../CartItem/CartItem';\n\nimport { Wrapper } from './Cart.styles';\n\nimport { CartItemType } from '../App';\n\ninterface Props {\n  cartItems: CartItemType[];\n  addToCart: (clickedItem: CartItemType) => void;\n  removeFromCart: (id: number) => void;\n};\n\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart }) => {\n  \n  return (\n    <Wrapper>\n      <h2>Shopping Cart</h2>\n      {cartItems.length === 0 ? <p>No items in cart.</p> : null}\n      {cartItems.map(item => (\n        <CartItem\n          key={item.id}\n          item={item}\n          addToCart={addToCart}\n          removeFromCart={removeFromCart}\n        />\n      ))}\n    </Wrapper>\n  );\n}\n\nexport default Cart;","import styled from 'styled-components';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport const Wrapper = styled.div`\n  margin: 40px;\n`;\n\nexport const StyledButton = styled(IconButton)`\n  position: fixed;\n  z-index: 100;\n  right: 20px;\n  top: 20px;\n`;","import { useState } from 'react';\nimport { useQuery } from 'react-query';\n\nimport Item from './Item/Item';\nimport Cart from './Cart/Cart';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n\nimport { Wrapper, StyledButton} from './App.styles';\nimport { AnyCnameRecord } from 'node:dns';\n\nexport interface CartItemType {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n}\n\nconst getProducts = async (): Promise<CartItemType[]> => {\n  return await (await (fetch('https://fakestoreapi.com/products'))).json();\n} \n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products',\n    getProducts\n  );\n  console.log(data);\n  \n  const getTotalItems = (items: CartItemType[]) =>\n    items.reduce((acc: number, item) => acc + item.amount, 0);\n\n  const handleAddToCart = (clickedItem: CartItemType) => null;\n\n  const handleRemoveFromCart = () => null;\n\n  if (isLoading) return <LinearProgress />;\n  if (error) return <div>somethin went wrong...</div>\n\n  return (\n    <Wrapper>\n      <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}>\n          <Cart\n            cartItems={cartItems}\n            addToCart={handleAddToCart}\n            removeFromCart={handleRemoveFromCart}\n          />\n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color='error'>\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n    <Grid container spacing={3}>\n        {data?.map((item) => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <App />\n  </QueryClientProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}